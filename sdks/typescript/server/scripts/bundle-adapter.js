import { build } from 'esbuild';
import { writeFileSync } from 'fs';
import { fileURLToPath } from 'url';
import { dirname, join } from 'path';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

// Bundle the adapter runtime directly from the adapter-runtime.ts file
try {
  const result = await build({
    entryPoints: [join(__dirname, '../src/adapters/appssdk/adapter-runtime.ts')],
    bundle: false,
    write: false,
    format: 'esm',
    platform: 'browser',
    target: 'es2020',
    minify: false, // Keep readable for debugging
  });

  const bundledCode = result.outputFiles[0].text;

  // Write the bundled code to a TypeScript file using JSON serialization for safe escaping
  const serializedCode = JSON.stringify(bundledCode);

  const outputContent = `// This file is auto-generated by scripts/bundle-adapter.js
// Do not edit directly - modify adapter-runtime.ts instead

export const ADAPTER_RUNTIME_SCRIPT = ${serializedCode};
`;

  const outputTsPath = join(__dirname, '../src/adapters/appssdk/adapter-runtime.bundled.ts');
  writeFileSync(outputTsPath, outputContent);
  console.log('✅ Successfully bundled Apps SDK adapter runtime');
} catch (error) {
  console.error('❌ Failed to bundle adapter runtime:', error);
  process.exit(1);
}
